version: "3"
services:
  gateway_nginx:
    image: saf_nginx_image:latest
    build:
      context: ../..
      dockerfile: deploy/docker/nginx/Dockerfile
    container_name: saf_nginx
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: curl --location http://gateway_nginx:80/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - saf_net

  app_go:
    image: saf_golang_image:latest
    build:
      context: ../..
      dockerfile: deploy/docker/go/Dockerfile
    container_name: saf_go
    tty: true
    volumes:
      - ../..:/var/local/app
      - app_storage:/var/local/storage
    working_dir: /var/local/app
    environment:
      POSTGRES_DB: saf
      POSTGRES_USER: root
      POSTGRES_PASSWORD: mDev3lopDb17
      POSTGRES_HOST: db_postgres
      STORAGE_PATH: /var/local/storage
    healthcheck:
      test: curl --location http://app_go:8080/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    entrypoint: ["go", "run", "cmd/restful.go"]
    networks:
      - saf_net

  db_postgres:
    image: saf_postgres_image:latest
    build:
      context: ../..
      dockerfile: deploy/docker/postgres/Dockerfile
    container_name: saf_postgres
    volumes:
      - db_backup:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: saf
      POSTGRES_USER: root
      POSTGRES_PASSWORD: mDev3lopDb17
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - saf_net

volumes:
  app_storage:
  db_backup:

networks:
  saf_net:
    driver: bridge
